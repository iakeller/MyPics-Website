{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/image.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/galleries.js","src/resources/data/images.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","title","message","showLogin","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","image","images","parse","getItem","showList","showForm","editTodoForm","showCompleted","activate","gallery","getGalleryImages","_id","logout","removeItem","createImage","imageObj","galleryId","saveImage","alert","imageId","filesToUpload","length","uploadFile","backToList","back","editImage","deleteImage","changeFiles","Array","push","files","removeFile","index","splice","List","galleries","getUserGalleries","createGallery","galleryObj","description","userId","saveGallery","editGallery","checkGallery","deleteGallery","completeGallery","completed","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Galleries","GALLERY_SERVICE","galleriesArray","id","i","Images","IMAGE_SERVICE","imagesArray","formData","FormData","forEach","item","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n    configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n\t       route: ['', 'home'],\n\t       moduleId: './modules/home',\n\t       name: 'Home' \n      },\n      {\n\t       route: 'list',\n\t       moduleId: './modules/list',\n         name: 'List',\n         auth: true \n      },\n      {\n\t       route: 'image',\n\t       moduleId: './modules/image',\n         name: 'Image',\n         auth: false \n      }\n    ]);\n  }\n\n}\n","var authConfig = {\n  baseUrl: \"http://localhost:5000/api\",\n  loginUrl: '/users/login',\n  tokenName: 'token',\n  authHeader: 'Authorization',\n  authToken: '',\n  logoutRedirect: '#/home'\n}\n\nexport default authConfig;\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n     baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {Users} from '../resources/data/users';\nimport {AuthService} from 'aurelia-auth';\n\n@inject(Router, Users, AuthService)\nexport class Home {\n  constructor(router, users, auth) {\n    this.router = router;\n    this.auth = auth;\n    this.loginError = '';\n    this.title = \"Your MyPics Galleries\"\n    this.users = users;\n    this.message = '';\n    this.showLogin = true;\n  }\n\nlogin() {\n  return this.auth.login(this.email, this.password)\n    .then(response => {\n      sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n      this.loginError = \"\";\n      this.router.navigate('list');\n    })\n    .catch(error => {\n      console.log(error);\n      this.loginError = \"Invalid credentials.\";\n    });\n};\n\n\n\nshowRegister(){\n  this.user = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  }\n  this.registerError = \"\";\n  this.showLogin = false;\n}\n\nasync save() {      \n  let serverResponse = await this.users.save(this.user);      \n  if (!serverResponse.error) {        \n    this.showLogin = true;      \n  } else {        \n    this.registerError = \"There was a problem registering the user.\"      \n  }\n}\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {AuthService} from 'aurelia-auth';\nimport {Images} from '../resources/data/images';\n\n@inject(Router,Images,AuthService)\nexport class image {\n  constructor(router,images,auth) {\n  this.router = router;\n  this.images = images;\n  this.auth = auth;\n  this.message = 'Image List';\n  this.user = JSON.parse(sessionStorage.getItem('user'));\n  this.showList = true;\n  this.showForm = false;\n  this.title = \"You Have Some Images!\"\n\tthis.editTodoForm = false;\n\tthis.showCompleted = false;\n  }\nasync activate(gallery){\n\t\tawait this.images.getGalleryImages(JSON.parse(sessionStorage.getItem('gallery'))._id);\n\t}\n\n   logout(){\n\tsessionStorage.removeItem('user');\n\tthis.auth.logout();\n   }\n\n\n   createImage(){\t\n\t\tthis.imageObj = {\n\t\t\tgalleryId: JSON.parse(sessionStorage.getItem('gallery'))._id\n\t\t\t\n\t\t}\n\t\tthis.showList = false;\n\t\tthis.showForm = true;\t\t\n   }\n\n   async saveImage(){\n        if(this.imageObj){       \n            let response = await this.images.save(this.imageObj);\n            if(response.error){\n                alert(\"There was an error creating the Image\");\n            } else {\n                var galleryId = JSON.parse(sessionStorage.getItem('gallery'))._id;\n                var imageId = response._id;\n                if(this.filesToUpload && this.filesToUpload.length){\n                    await this.images.uploadFile(this.filesToUpload, galleryId,imageId );\n                    this.filesToUpload = [];\n                }\n            }\n            this.showList = true;\n\t\t\tthis.showForm = false;\n        }\n    }\n\n\n\tbackToList(){\n\t\tthis.router.navigate('list');\n\t}\n\n\t back(){\n\t\t this. showList = true;\n\t\t  this.showForm = false;\n\t }\n\n\t  editImage(image){\n        this.imageObj = image;\n        this. showList = false;\n\t\tthis.showForm = true;\n      }\n\n   deleteImage(image){\n        this.images.deleteImage(image._id);\n    }\n\n\t changeFiles(){\n    \tthis.filesToUpload = new Array(); \n    \tthis.filesToUpload.push(this.files[0]);\n\t}\n\tremoveFile(index){\n    \tthis.filesToUpload.splice(index,1);\n\t}\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {AuthService} from 'aurelia-auth';\nimport {Galleries} from '../resources/data/galleries';\n\n@inject(Router,Galleries,AuthService)\nexport class List {\n  constructor(router,galleries,auth) {\n\t  \n  this.router = router;\n  this.galleries = galleries;\n  this.auth = auth;\n  this.message = 'Your MyPics Galleries';\n  this.user = JSON.parse(sessionStorage.getItem('user'));\n  this.showList = true;\n  this.showForm = false;\n  this.editTodoForm = false;\n  this.showCompleted = false;\n  }\n\n  \nasync activate(){\n\t\tawait this.galleries.getUserGalleries(this.user._id);\n\t}\n\n   logout(){\n\tsessionStorage.removeItem('user');\n\tthis.auth.logout();\n   }\n\n\n  createGallery(){\t\n\t\tthis.galleryObj = {\n\t\t\tgallery: \"\",\n\t\t\tdescription: \"\",\n\t\t\t userId: this.user._id,\n\t\t}\n\t\tthis.showList = false;\n\t\tthis.showForm = true;\t\t\n   }\n  \n      async saveGallery(){\n        if(this.galleryObj){       \n            let response = await this.galleries.save(this.galleryObj);\n            if(response.error){\n                alert(\"There was an error creating the Gallery\");\n            } else {\n              \n            }\n            this.showList = true;\n\t\t\tthis.showForm = false;\n        }\n    }\n\n\n\t back(){\n\t\t this. showList = true;\n\t\t  this.showForm = false;\n\t }\n\t  editGallery(gallery){\n        this.galleryObj = gallery;\n        this. showList = false;\n\t\tthis.showForm = true;\n      }\n\n\t\n\n  checkGallery(gallery) {  \n\t  sessionStorage.setItem(\"gallery\", JSON.stringify(gallery));\n  \t  this.router.navigate('image');   \n    };\n\t     deleteGallery(gallery){\n        this.galleries.deleteGallery(gallery._id);\n    }\n\n\tcompleteGallery(gallery){\n    \tgallery.completed = !gallery.completed;\n    \tthis.galleryObj = gallery;\n    \tthis.saveGallery();\n\t }\n\t\n\t changeFiles(){\n    \tthis.filesToUpload = new Array(); \n    \tthis.filesToUpload.push(this.files[0]);\n\t}\n\tremoveFile(index){\n    \tthis.filesToUpload.splice(index,1);\n\t}\n\n}\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import { inject } from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n\tconstructor(http) {\n\t\tthis.httpClient = http;\n        this.BASE_URL = \"http://localhost:5000/api/\";\n        this.httpClient.configure(config => {\n\t\tconfig\n\t\t\t.withBaseUrl(this.BASE_URL)\n\t\t\t.withDefaults({\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'X-Requested-With': 'Fetch'\n\t\t\t}\n\t\t\t})\n\t\t\t.withInterceptor({\n\t\t\trequest(request) {\n\t\t\t\tvar authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\n                request.headers.append('Authorization', authHeader);\n\t\t\t\tconsole.log(`Requesting ${request.method} ${request.url}`);\n\t\t\t\treturn request;\n\t\t\t},\n\t\t\tresponse(response) {\n\t\t\t\tconsole.log(`Received ${response.status} ${response.url}`);\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\t});\n\t\t});\n\n    }\n    get(url) {\n\t\treturn this.httpClient.fetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\treturn data;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n    }\n    post(content, url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'post',\n\t\t\t\tbody: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n    }\n    put(content, url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'put',\n\t\t\t\tbody: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n    }\n    delete(url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'delete'\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error ;\n\t\t\t});\n\t}\n\tuploadFiles(files, url){\n   \t\t return this.httpClient\n    \t.fetch(url, {\n        method: 'post',\n        body: files\n    })\n    \t.then(response => response.json())\n    \t.then(object => {\n        return object;\n    })\n    \t.catch(error => {\n        return error;\n    });\n}\n\n\n\n\n\n\n\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Galleries {\n   constructor(data) {\n        \t\tthis.data = data;\n        \t\tthis.GALLERY_SERVICE = 'galleries';\n                this.galleriesArray = [];\n\n   \t\t }\n    async save(gallery){\n\t\tif(gallery){\n\t\t\tif(!gallery._id){\n\t\t\t\tlet serverResponse = await this.data.post(gallery, this.GALLERY_SERVICE);\n\t\tif(!serverResponse.error){\n\t\t\tthis.galleriesArray.push(serverResponse);\n\t\t     }\n\t\t           return serverResponse;\n\t\t }else{\n\t\t\t let serverResponse = await this.data.put(gallery, this.GALLERY_SERVICE + \"/\" +gallery._id);\n\t\t\t  return serverResponse;\n\t\t }\n}}\n\nasync getUserGalleries(id){\n\t\tlet response = await this.data.get(this.GALLERY_SERVICE + \"/user/\" + id);\n\t\tif(!response.error && !response.message){\n\t\t\tthis.galleriesArray = response;\n\t\t}\n\t   }\nasync deleteGallery(id){\n\t\tlet response = await this.data.delete(this.GALLERY_SERVICE + \"/\" + id);\n\t\tif(!response.error){\n\t\t\tfor(let i = 0; i < this.galleriesArray.length; i++){\n\t\t\t\tif(this.galleriesArray[i]._id === id){\n\t\t\t\t\tthis.galleriesArray.splice(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Images {\n   constructor(data) {\n        \t\tthis.data = data;\n        \t\tthis.IMAGE_SERVICE = 'images';\n                this.imagesArray = [];\n\n   \t\t }\n    async save(image){\n\t\tif(image){\n\t\t\tif(!image._id){\n\t\t\t\tlet serverResponse = await this.data.post(image, this.IMAGE_SERVICE);\n\t\tif(!serverResponse.error){\n\t\t\tthis.imagesArray.push(serverResponse);\n\t\t     }\n\t\t           return serverResponse;\n\t\t }else{\n\t\t\t let serverResponse = await this.data.put(image, this.IMAGE_SERVICE + \"/\" +image._id);\n\t\t\t  return serverResponse;\n\t\t }\n}}\n\nasync uploadFile(files, galleryId, imageId){\n        let formData = new FormData();\n        files.forEach((item, index) => {\n\t    formData.append(\"file\" + index, item);\n        });\n    \n\tlet response = await this.data.uploadFiles(formData, this.IMAGE_SERVICE + \"/upload/\"  + galleryId + \"/\"   + imageId);\n\tconsole.log(\"this is being called \" + this.IMAGE_SERVICE + \"/upload/\" + galleryId + \"/\" + imageId);\n\treturn response;\n}\n\n\n\nasync getGalleryImages(id){\n\t\tlet response = await this.data.get(this.IMAGE_SERVICE + \"/gallery/\" + id);\n\t\tif(!response.error && !response.message){\n\t\t\tthis.imagesArray = response;\n\t\t}\n\t   }\nasync deleteImage(id){\n\t\tlet response = await this.data.delete(this.IMAGE_SERVICE + \"/\" + id);\n\t\tif(!response.error){\n\t\t\tfor(let i = 0; i < this.imagesArray.length; i++){\n\t\t\t\tif(this.imagesArray[i]._id === id){\n\t\t\t\t\tthis.imagesArray.splice(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Users {\n\n  constructor(data) {        \n    this.data = data;        \n    this.USER_SERVICE = 'users';    \n  }\n\n  async save(user) {\n    if (user) {\n      let serverResponse = await this.data.post(user, this.USER_SERVICE);\n      return serverResponse;\n    }\n  }\n\n}\n\n\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n@inject(Element)\nexport class FlatPickerCustomElement {\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\nconstructor(element) {\n  this.element = element;\n}\n\nbind() {\n            const defaultConfig = {\n                \taltInput: true,\n                \taltFormat: \"F j, Y\",\n        wrap: true\n            };\n          this._config = Object.assign({}, defaultConfig);\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n        }\n\n    attached() {\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n         }\n        \u000bonChange(selectedDates, dateStr, instance) {\n                this.value = selectedDates[0] \n        }\n\n        valueChanged() {\n                if (!this.flatpickr) {\n                    return;\n                }\n      if (this.value === this.flatpickr.selectedDates[0]) {\n                    return;\n                }\n         let newDate = this.value ? this.value : undefined;\n       this.flatpickr.setDate(newDate);\n            }\n}\n","export class CompletedValueConverter {\n  \n     toView(array, value) {\n       if(!value){\n        return array.filter(item => {\n          return !item.completed;\n        })\n       } else {\n         return array;\n       }\n     }\n    }\n  \n  ","import moment from 'moment';\nexport class DateFormatValueConverter {\n  toView(value) {\n    if (value === undefined || value === null) {\n      return;    \n    }        \n    return moment(value).format('MMM Do YYYY');\n  }\n}\n"],"sourceRoot":".."}